generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(uuid())
  userName         String     @unique
  email            String     @unique
  password         String
  firstName        String
  lastName         String
  phoneNumber      String
  dateOfBirth      DateTime
  location         String
  profilePhoto     String?
  lastDonationDate DateTime?
  canDonateBlood   Boolean    @default(false)
  bloodType        BloodType
  role             UserRole   @default(USER)
  status           UserStatus @default(ACTIVE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  donor     BloodRequest[] @relation("donor")
  requester BloodRequest[] @relation("requester")

  @@map("users")
}

model BloodRequest {
  id          String @id @default(uuid())
  donorId     String
  requesterId String
  donor       User   @relation("donor", fields: [donorId], references: [id])
  requester   User   @relation("requester", fields: [requesterId], references: [id])

  firstName    String
  lastName     String
  phoneNumber  String
  dateOfBirth  DateTime
  location     String
  profilePhoto String?
  bloodType    BloodType
  status       RequestStatus @default(PENDING)
  hospitalName String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("bloodRequests")
}

enum BloodType {
  A_POS
  A_NEG
  B_POS
  B_NEG
  AB_POS
  AB_NEG
  O_POS
  O_NEG
}

enum UserStatus {
  ACTIVE
  DEACTIVE
}

enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}
